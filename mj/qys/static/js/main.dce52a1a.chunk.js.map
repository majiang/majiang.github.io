{"version":3,"sources":["gamecommon.ts","common.ts","hu.ts","deal.ts","components.tsx","redux-logic-helper.ts","gamelogics.ts","App.js","serviceWorker.js","index.js"],"names":["rank","tile","shufflePile","m","ranks","pile","Array","from","keys","i","Math","floor","random","appendMessage","messages","newMessage","length","slice","range","n","isNormalHu","hand","entries","handCopied","isSets","gamecommon","c","isPairs","sets","pairs","nullDeal","p","started","discardTile","deal","position","splice","drawTile","push","dealHand","sortHand","console","log","sort","a","b","ret","newDeal","shuffle","date","huValidator","allowPairs","count","isPairsWithHog","tileClass","theme","tileStyle","tileSuit","PostModernBamboos","PostModernCharacters","PostModernDots","GLMahjongTileBamboos","GLMahjongTileCharacters","GLMahjongTileDots","tileHeight","Game","props","handleWindowResize","window","innerWidth","setState","windowInnerWidth","handleTimeRestChanged","timeRest","valueOf","state","settings","timeOfGame","Date","clearInterval","displayTime","handleOpenModal","handleHandLengthChanged","e","handLength","parseInt","target","value","handleTileStyleChanged","handleTileSuitChanged","handleAllowPairsChanged","handleTimeBeforeDrawChanged","timeBeforeDraw","handleTimeBeforeSortChanged","timeBeforeSort","handleTimeOfGameChanged","openModal","handleCloseModal","declareHu","actions","validator","next","initializer","directDiscardAndDraw","discardAndDraw","resetGame","first","handleKeydown","keyCode","preventDefault","findIndex","index","document","addEventListener","this","setInterval","removeEventListener","maxTiles","discard","width","score","time","hu","reset","handler","close","isOpen","React","Component","Hand","key","onClick","scale","height","map","renderTile","HandOuter","className","style","children","HandInner","transformOrigin","transform","Tile","src","imageUrl","generateStyle","alt","toString","TypeError","r","PostModernTile","clip","top","right","bottom","left","GLMahjongTile","suit","Status","v","Controls","toFixed","choices","display","formatDigits","name","defaultValue","onChange","id","label","min","max","step","default","renderHuButton","renderStatus","renderStartButton","renderHandLength","renderTileStyle","renderTileSuit","renderAllowPairs","renderTimeBeforeDraw","renderTimeBeforeSort","renderTimeOfGame","Radios","Radio","type","defaultChecked","htmlFor","Range","StartButton","HuButton","ResultDialog","encodeURIComponent","shouldCloseOnOverlayClick","overlayClassName","href","renderText","d","l","repeat","createLogic","actionCreator","config","_createLogic","process","dispatch","done","action","getState","isType","validate","undefined","actionCreatorFactory","nullGame","gameActions","draw","resetAndDraw","newGame","sortAndDraw","scoreHu","scoreCuohu","finish","gameReducer","reducerWithInitialState","case","payload","_","message","sqrt","tbd","dispatchWaitDispatch","firstAction","waitTimeMs","secondAction","setTimeout","discardAndDrawLogic","timeBetweenSortDraw","nextAction","resetAndDrawLogic","sortAndDrawLogic","logics","latest","warnTimeout","fill","forEach","fromTiles","dispatchSequence","gameStore","createStore","applyMiddleware","createLogicMiddleware","ConnectedGame","connect","storeState","bindActionCreators","App","store","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.dce52a1a.chunk.js","sourcesContent":["export type Hand = Array<number>;\r\nexport type Pile = Array<number>;\r\nexport type Tile = number;\r\nexport const ranks = 9;\r\nexport const duplicates = 4;\r\nexport const deck = ranks * duplicates;\r\nexport function rank(tile: Tile): number\r\n{\r\n    return ~~(tile/duplicates);\r\n}\r\nexport function shufflePile(): Pile\r\n{\r\n  let m = deck;\r\n  let pile = Array.from(Array(m).keys());\r\n  while (m)\r\n  {\r\n    const i = Math.floor(Math.random() * (m--));\r\n    [pile[i], pile[m]] = [pile[m], pile[i]];\r\n  }\r\n  return pile;\r\n}\r\nexport const setSize = 3;\r\nexport const pairSize = 2;\r\nexport type Message = [number, string];\r\nexport type Messages = Array<Message>;\r\nexport function appendMessage(messages: Messages, newMessage: string): Messages\r\n{\r\n  if (messages.length === 0) return [[0, newMessage]];\r\n  const ret: Messages = [...messages, [messages[messages.length-1][0]+1, newMessage]];\r\n  return ret.slice(-4);\r\n}\r\n","export function* range(n: number)\r\n{\r\n  for (let i = 0; i < n; i++) yield i;\r\n}\r\n","import * as gamecommon from './gamecommon';\r\nimport { range } from './common';\r\n\r\nexport function fromTiles(hand: gamecommon.Hand): Array<number>\r\n{\r\n  let ret = new Array(gamecommon.ranks).fill(0);\r\n  hand.forEach(tile => {ret[gamecommon.rank(tile)] += 1});\r\n  return ret;\r\n}\r\n\r\nexport type Validator = (hand: Array<number>) => boolean;\r\n\r\nexport function isNormalHu(hand: Array<number>): boolean\r\n{\r\n  for (const [rank, count] of hand.entries())\r\n  {\r\n    if (count < gamecommon.pairSize)\r\n    continue;\r\n    let handCopied = [...hand];\r\n    handCopied[rank] -= gamecommon.pairSize;\r\n    if (isSets(handCopied)) return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function isSets(hand: Array<number>): boolean\r\n{\r\n  for (const rank of range(gamecommon.ranks - gamecommon.setSize + 1))\r\n  {\r\n    if (hand[rank] < 0) return false;\r\n    hand[rank] %= gamecommon.setSize;\r\n    const c = hand[rank];\r\n    for (const d of range(gamecommon.setSize))\r\n    {\r\n      hand[rank + d] -= c;\r\n    }\r\n  }\r\n  for (const count of hand)\r\n  {\r\n    if (count % gamecommon.setSize) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function isPairs(hand: Array<number>): boolean\r\n{\r\n  let sets = 0;\r\n  let pairs = 0;\r\n  for (const count of hand)\r\n  {\r\n    switch (count)\r\n    {\r\n      case 0: continue;\r\n      case gamecommon.setSize: sets += 1; continue;\r\n      case gamecommon.pairSize: pairs += 1; continue;\r\n      default: return false;\r\n    }\r\n  }\r\n  return (sets <= 1) && (pairs % gamecommon.setSize === 1);\r\n}\r\n\r\nexport function isPairsWithHog(hand: Array<number>): boolean\r\n{\r\n  let sets = 0;\r\n  let pairs = 0;\r\n  for (const count of hand)\r\n  {\r\n    if (count === gamecommon.setSize)\r\n    {\r\n      sets += 1;\r\n      continue;\r\n    }\r\n    if (count % gamecommon.pairSize)\r\n      return false;\r\n    pairs += count / gamecommon.pairSize;\r\n  }\r\n  return (sets <= 1) && (pairs % gamecommon.setSize === 1);\r\n}\r\n","import { Hand, Pile, shufflePile } from './gamecommon';\r\nexport type Deal =\r\n{\r\n  hand: Hand,\r\n  p: number,\r\n  pile: Pile,\r\n  started: Date | null,\r\n};\r\nexport const nullDeal: Deal =\r\n{\r\n  hand: [],\r\n  p: 0,\r\n  pile: [],\r\n  started: null,\r\n};\r\nexport function discardTile(deal: Deal, position: number)\r\n{\r\n  let hand = [...deal.hand];\r\n  hand.splice(position, 1);\r\n  return {...deal,\r\n    hand,\r\n  };\r\n}\r\nexport function drawTile(deal: Deal)\r\n{\r\n  let hand = [...deal.hand];\r\n  hand.push(deal.pile[deal.p]);\r\n  return {...deal,\r\n    hand,\r\n    p: deal.p+1,\r\n  };\r\n}\r\nexport function dealHand(deal: Deal): Deal\r\n{\r\n  return {...deal,\r\n    hand: deal.pile.slice(0, deal.p),\r\n  };\r\n}\r\nexport function sortHand(deal: Deal): Deal\r\n{\r\n  console.log(deal);\r\n  let hand = [...deal.hand];\r\n  hand.sort((a, b) => (a - b));\r\n  const ret = {...deal,\r\n    hand,\r\n  };\r\n  console.log(ret);\r\n  return ret;\r\n}\r\nexport function newDeal(shuffle: () => Pile, date: () => Date, p: number): Deal\r\n{\r\n  const pile = shufflePile();\r\n  const started = date();\r\n  return dealHand({...nullDeal,\r\n    p,\r\n    pile,\r\n    started,\r\n  });\r\n}\r\n","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport * as gamecommon from './gamecommon';\r\nimport { isNormalHu, isPairs, isPairsWithHog, Validator } from './hu';\r\nimport { gameActions } from './gamelogics';\r\nimport { Deal, newDeal } from './deal';\r\n\r\ntype AllowPairs = \"disallow\" | \"allow\" | \"allow-hog\";\r\ntype TileStyle = \"PostModern\" | \"GLMahjongTile\";\r\ntype TileSuit = \"bamboos\" | \"characters\" | \"dots\";\r\n\r\ntype GameProps =\r\n{\r\n  initializer: ()=>Array<number>,\r\n  deal: Deal,\r\n  actions: typeof gameActions,\r\n  score: number | null,\r\n  started: Date | null,\r\n  messages: Array<[number, string]>\r\n};\r\ntype Settings =\r\n{\r\n  handLength: number,\r\n  allowPairs: AllowPairs,\r\n  timeBeforeDraw: number,\r\n  timeBeforeSort: number,\r\n  timeOfGame: number,\r\n};\r\nfunction toString(settings: Settings): string\r\n{\r\n  return `${settings.handLength}${(\r\n    settings.allowPairs === 'disallow' ? '' :\r\n    settings.allowPairs === 'allow' ? 'p' : 'pp'\r\n  )} ${settings.timeOfGame/1000}/${settings.timeBeforeDraw/1000}` + (\r\n    settings.timeBeforeSort < settings.timeBeforeDraw ? `(${settings.timeBeforeSort/1000})` : ''\r\n  );\r\n}\r\nfunction huValidator(allowPairs: AllowPairs): Validator\r\n{\r\n  switch (allowPairs)\r\n  {\r\n    case 'disallow': return isNormalHu;\r\n    case 'allow': return (hand) => isNormalHu(hand) || isPairs(hand);\r\n    case 'allow-hog': return (hand) => isNormalHu(hand) || isPairs(hand) || isPairsWithHog(hand);\r\n  }\r\n}\r\ntype Theme =\r\n{\r\n  tileStyle: TileStyle,\r\n  tileSuit: TileSuit,\r\n}\r\nfunction tileClass(theme: Theme): React.ComponentClass<TileProps>\r\n{\r\n  switch (theme.tileStyle)\r\n  {\r\n    case 'PostModern': switch (theme.tileSuit)\r\n    {\r\n      case 'bamboos': return PostModernBamboos;\r\n      case 'characters': return PostModernCharacters;\r\n      case 'dots': return PostModernDots;\r\n    }\r\n    case 'GLMahjongTile': switch (theme.tileSuit)\r\n    {\r\n      case 'bamboos': return GLMahjongTileBamboos;\r\n      case 'characters': return GLMahjongTileCharacters;\r\n      case 'dots': return GLMahjongTileDots;\r\n    }\r\n  }\r\n}\r\nfunction tileHeight(theme: Theme): number\r\n{\r\n  switch (theme.tileStyle)\r\n  {\r\n    case 'PostModern': return 88;\r\n    case 'GLMahjongTile': return 91;\r\n  }\r\n}\r\ntype GameState =\r\n{\r\n  settings: Settings,\r\n  theme: Theme,\r\n  timeRest: number | null,\r\n  displayTime: NodeJS.Timeout | null,\r\n  windowInnerWidth: number,\r\n  openModal: boolean,\r\n};\r\n\r\nexport class Game extends React.Component<GameProps, GameState>\r\n{\r\n  constructor (props: GameProps)\r\n  {\r\n    super (props);\r\n    this.state = {\r\n      settings: {\r\n        handLength: 13,\r\n        allowPairs: \"allow\",\r\n        timeBeforeDraw: 1000,\r\n        timeBeforeSort: 500,\r\n        timeOfGame: 60000,\r\n      },\r\n      theme: {\r\n        tileStyle: \"PostModern\",\r\n        tileSuit: \"dots\",\r\n      },\r\n      timeRest: null,\r\n      displayTime: null,\r\n      windowInnerWidth: window.innerWidth,\r\n      openModal: false,\r\n    };\r\n  }\r\n  handleWindowResize = () => {\r\n    console.log(`windowInnerWidth: ${window.innerWidth}`);\r\n    this.setState({windowInnerWidth: window.innerWidth});\r\n  }\r\n  handleTimeRestChanged = () => {\r\n    if (this.props.started == null)\r\n      return;\r\n    let timeRest = this.props.started.valueOf() + this.state.settings.timeOfGame - new Date().valueOf();\r\n    if (timeRest < 0)\r\n      timeRest = 0;\r\n    this.setState({timeRest});\r\n    if (timeRest <= 0)\r\n    {\r\n      clearInterval(this.state.displayTime!);\r\n      this.handleOpenModal();\r\n    }\r\n  };\r\n  handleHandLengthChanged = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n  {\r\n    this.setState({settings: {...this.state.settings, handLength: parseInt(e.target.value)}});\r\n  };\r\n  handleTileStyleChanged = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n  {\r\n    this.setState({theme: {...this.state.theme, tileStyle: e.target.value as TileStyle}});\r\n  };\r\n  handleTileSuitChanged = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n  {\r\n    this.setState({theme: {...this.state.theme, tileSuit: e.target.value as TileSuit}});\r\n  };\r\n  handleAllowPairsChanged = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n  {\r\n    this.setState({settings: {...this.state.settings, allowPairs: e.target.value as AllowPairs}});\r\n  }\r\n  handleTimeBeforeDrawChanged = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n  {\r\n    this.setState({settings: {...this.state.settings, timeBeforeDraw: parseInt(e.target.value)}});\r\n  };\r\n  handleTimeBeforeSortChanged = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n  {\r\n    this.setState({settings: {...this.state.settings, timeBeforeSort: parseInt(e.target.value)}});\r\n  };\r\n  handleTimeOfGameChanged = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n  {\r\n    this.setState({settings: {...this.state.settings, timeOfGame: parseInt(e.target.value)}});\r\n  };\r\n  handleOpenModal = () =>\r\n  {\r\n    this.setState({openModal: true});\r\n  }\r\n  handleCloseModal = () =>\r\n  {\r\n    this.setState({openModal: false});\r\n  }\r\n  declareHu = () =>\r\n  {\r\n    return this.props.actions.declareHu({\r\n      validator: huValidator(this.state.settings.allowPairs),\r\n      next: newDeal(this.props.initializer, (() => new Date()), this.state.settings.handLength),\r\n      timeBeforeDraw: this.state.settings.timeBeforeDraw,\r\n      timeBeforeSort: this.state.settings.timeBeforeSort,\r\n    });\r\n  };\r\n  directDiscardAndDraw = () =>\r\n  {\r\n    return this.discardAndDraw(this.props.deal.hand.length - 1);\r\n  };\r\n  discardAndDraw = (position: number) =>\r\n  {\r\n    return this.props.actions.discardAndDraw({\r\n      position: position,\r\n      timeBeforeDraw: this.state.settings.timeBeforeDraw,\r\n      timeBeforeSort: this.state.settings.timeBeforeSort});\r\n  };\r\n  resetGame = () =>\r\n  {\r\n    return this.props.actions.resetGame({\r\n      first: newDeal(this.props.initializer, (() => new Date()), this.state.settings.handLength),\r\n      timeBeforeDraw: this.state.settings.timeBeforeDraw,\r\n      timeBeforeSort: this.state.settings.timeBeforeSort,\r\n      timeOfGame: this.state.settings.timeOfGame,\r\n    });\r\n  };\r\n  handleKeydown = (e: KeyboardEvent) =>\r\n  {\r\n    if (e.keyCode === 32) // space: hu\r\n    {\r\n      e.preventDefault();\r\n      return this.declareHu();\r\n    }\r\n    if (e.keyCode < 48) return;\r\n    if (e.keyCode === 48) // 0: drawn\r\n    {\r\n      return this.directDiscardAndDraw();\r\n    }\r\n    if (e.keyCode === 83) // s: start\r\n    {\r\n      return this.resetGame();\r\n    }\r\n    if (58 <= e.keyCode) return;\r\n    console.log(`keyCode: ${e.keyCode}`);\r\n    let rank = e.keyCode - 49;\r\n    console.log(`rank: ${rank}`);\r\n    let position = this.props.deal.hand.findIndex((tile, index) => {\r\n      console.log(`${index}: ${tile}`);\r\n      return (gamecommon.rank(tile) === rank);\r\n    });\r\n    console.log(`position: ${position}`);\r\n    if (0 <= position)\r\n      return this.discardAndDraw(position);\r\n  };\r\n  componentDidMount()\r\n  {\r\n    document.addEventListener(\"keydown\", this.handleKeydown);\r\n    this.setState({displayTime: setInterval(this.handleTimeRestChanged, 10)});\r\n    window.addEventListener('resize', this.handleWindowResize);\r\n  }\r\n  componentWillUnmount()\r\n  {\r\n    document.removeEventListener(\"keydown\", this.handleKeydown);\r\n    clearInterval(this.state.displayTime!);\r\n    window.removeEventListener('resize', this.handleWindowResize);\r\n  }\r\n  render()\r\n  {\r\n    return <>\r\n        <Hand theme={this.state.theme} hand={this.props.deal.hand}\r\n          tileClass={tileClass(this.state.theme)}\r\n          maxTiles={this.state.settings.handLength+1}\r\n          discard={this.discardAndDraw}\r\n          width={this.state.windowInnerWidth} />\r\n        <Controls\r\n          score={this.props.score}\r\n          time={this.state.timeRest}\r\n          hu={this.declareHu}\r\n          reset={this.resetGame}\r\n          handLength={{handler: this.handleHandLengthChanged}}\r\n          tileStyle={{handler: this.handleTileStyleChanged}}\r\n          tileSuit={{handler: this.handleTileSuitChanged}}\r\n          allowPairs={{handler: this.handleAllowPairsChanged}}\r\n          timeBeforeDraw={{handler: this.handleTimeBeforeDrawChanged, value: this.state.settings.timeBeforeDraw}}\r\n          timeBeforeSort={{handler: this.handleTimeBeforeSortChanged, value: this.state.settings.timeBeforeSort}}\r\n          timeOfGame={{handler: this.handleTimeOfGameChanged, value: this.state.settings.timeOfGame}}\r\n        />\r\n        <Status messages={this.props.messages} />\r\n        <ResultDialog\r\n          close={this.handleCloseModal}\r\n          isOpen={this.state.openModal}\r\n          score={~~(this.props.score! * 1000)}\r\n          settings={toString(this.state.settings)}\r\n        ></ResultDialog>\r\n    </>;\r\n  }\r\n}\r\n\r\ntype HandProps =\r\n{\r\n  hand: gamecommon.Hand,\r\n  maxTiles: number,\r\n  theme: Theme,\r\n  tileClass: React.ComponentClass<TileProps>,\r\n  discard: (position: number) => void,\r\n  width: number,\r\n};\r\nclass Hand extends React.Component<HandProps>\r\n{\r\n  renderTile(i: number, tile: gamecommon.Tile)\r\n  {\r\n    return (<this.props.tileClass key={tile} rank={gamecommon.rank(tile)} onClick={()=>this.props.discard(i)}/>);\r\n  }\r\n  render()\r\n  {\r\n    console.log(this.state);\r\n    return <HandOuter scale={this.props.width / (64 * this.props.maxTiles)} height={tileHeight(this.props.theme)}>\r\n      <HandInner width={64*this.props.maxTiles} scale={this.props.width / (64 * this.props.maxTiles)}>\r\n        {this.props.hand.map((tile, i)=>this.renderTile(i, tile))}\r\n        </HandInner></HandOuter>;\r\n  }\r\n}\r\n\r\nclass HandOuter extends React.Component<{scale: number, height: number}>\r\n{\r\n  render()\r\n  {\r\n    return <div className=\"hand-container\" style={{\r\n      height: `${this.props.scale * this.props.height}px`\r\n    }}>{this.props.children}</div>;\r\n  }\r\n}\r\nclass HandInner extends React.Component<{width: number, scale: number}>\r\n{\r\n  render()\r\n  {\r\n    return <div className=\"hand\" style={{\r\n      width: `${this.props.width}px`,\r\n      transformOrigin: 'top left',\r\n      transform: `scale(${this.props.scale})`,\r\n    }}>{this.props.children}</div>;\r\n  }\r\n}\r\n\r\ntype TileProps =\r\n{\r\n  rank: number,\r\n  onClick: () => void,\r\n};\r\n\r\nclass Tile extends React.Component<TileProps>\r\n{\r\n  render()\r\n  {\r\n    return <div className={`tile ${this.tileClass()}`} onClick={this.props.onClick}>\r\n      <img src={this.imageUrl()}\r\n      style={this.generateStyle(this.props.rank)}\r\n      alt={(this.props.rank+1).toString()}/></div>\r\n  }\r\n  tileClass(): string\r\n  {\r\n    throw new TypeError(\"tileClass() is not implemented\");\r\n  }\r\n  imageUrl(): string\r\n  {\r\n    throw new TypeError(\"imageUrl() is not implemented\");\r\n  }\r\n  generateStyle(r: number): any{throw new TypeError(\"\");}\r\n}\r\n\r\nclass PostModernTile extends Tile\r\n{\r\n  generateStyle(r: number)\r\n  {\r\n    return {\r\n        clip: `rect(${this.top(r)}, ${this.right(r)}, ${this.bottom(r)}, ${this.left(r)})`,\r\n        top: -this.top(r),\r\n        left: -this.left(r),\r\n    };\r\n  }\r\n  tileClass()\r\n  {\r\n    return 'pm';\r\n  }\r\n  right(r: number): number{throw new TypeError(\"right() is not implemented\");}\r\n  left(r: number): number{throw new TypeError(\"left() is not implemented\");}\r\n  top(r: number){return 0;}\r\n  bottom(r: number){return 88;}\r\n  imageUrl()\r\n  {\r\n    return \"postmodern.svg\";\r\n  }\r\n}\r\n\r\nclass PostModernBamboos extends PostModernTile\r\n{\r\n  left(r: number){return (24+r)*64;}\r\n  right(r: number){return (25+r)*64;}\r\n}\r\n\r\nclass PostModernCharacters extends PostModernTile\r\n{\r\n  left(r: number){return (15+r)*64;}\r\n  right(r: number){return (16+r)*64;}\r\n}\r\n\r\nclass PostModernDots extends PostModernTile\r\n{\r\n  left(r: number){return (0+r)*64;}\r\n  right(r: number){return (1+r)*64;}\r\n}\r\n\r\nclass GLMahjongTile extends Tile\r\n{\r\n  suit(): string{throw new TypeError(\"suit() is not implemented\");}\r\n  imageUrl()\r\n  {\r\n    return `gl-mahjongtile-svg/${this.suit()}-${this.props.rank}.svg`;\r\n  }\r\n  tileClass()\r\n  {\r\n    return 'gl';\r\n  }\r\n  generateStyle(r: number)\r\n  {\r\n    return {\r\n      transform: 'scale(1, -1)',\r\n    };\r\n  }\r\n}\r\n\r\nclass GLMahjongTileBamboos extends GLMahjongTile\r\n{\r\n  suit()\r\n  {\r\n    return 'b';\r\n  }\r\n}\r\n\r\nclass GLMahjongTileCharacters extends GLMahjongTile\r\n{\r\n  suit()\r\n  {\r\n    return 'c';\r\n  }\r\n}\r\n\r\nclass GLMahjongTileDots extends GLMahjongTile\r\n{\r\n  suit()\r\n  {\r\n    return 'd';\r\n  }\r\n}\r\n\r\ntype StatusProps =\r\n{\r\n  messages: Array<[number, string]>\r\n};\r\nclass Status extends React.Component<StatusProps>\r\n{\r\n  render()\r\n  {\r\n    return <ul className=\"status\">\r\n      {this.props.messages.map((v) => <li key={v[0]}>{v[1]}</li>)}\r\n    </ul>;\r\n  }\r\n}\r\n\r\ntype Handler = (e: React.ChangeEvent<HTMLInputElement>) => void;\r\ntype HasHandler =\r\n{\r\n  handler: Handler\r\n};\r\ntype HasHandlerAndValue =\r\n{\r\n  handler: Handler,\r\n  value: any,\r\n}\r\ntype ControlsProps =\r\n{\r\n  reset: () => void,\r\n  hu: () => void,\r\n  score: number | null,\r\n  time: number | null,\r\n  handLength: HasHandler,\r\n  tileStyle: HasHandler,\r\n  tileSuit: HasHandler,\r\n  allowPairs: HasHandler,\r\n  timeBeforeDraw: HasHandlerAndValue,\r\n  timeBeforeSort: HasHandlerAndValue,\r\n  timeOfGame: HasHandlerAndValue,\r\n};\r\n\r\nclass Controls extends React.Component<ControlsProps>\r\n{\r\n  renderHuButton()\r\n  {\r\n    return <HuButton onClick={this.props.hu} />;\r\n  }\r\n  renderStatus()\r\n  {\r\n    return <div className=\"status-labels\">\r\n      <div className=\"status-label\">{(this.props.score == null) ? `` : `score: ${~~(this.props.score * 1000)}`}</div>\r\n      <div className=\"status-label\">{(this.props.time == null) ? `` : `time: ${(this.props.time/1000).toFixed(2)}`}</div>\r\n    </div>;\r\n  }\r\n  renderStartButton()\r\n  {\r\n    return <StartButton onClick={this.props.reset} />;\r\n  }\r\n  renderHandLength()\r\n  {\r\n    return <fieldset className=\"hand-length\">\r\n        <span className=\"radio-label\">#tiles</span>\r\n        <Radios choices={[1, 4, 7, 10, 13, 16].map((v) =>\r\n          ({display: formatDigits(v, 2), value: v}))}\r\n          name=\"hand-length\"\r\n          defaultValue={13}\r\n          onChange={this.props.handLength.handler} />\r\n        </fieldset>;\r\n  }\r\n  renderTileStyle()\r\n  {\r\n    return <fieldset className=\"tile-style\">\r\n        <span className=\"radio-label\">tile style</span>\r\n        <Radios choices={[\r\n          {display: \"PostModern\", value: \"PostModern\"},\r\n          {display: \"GL-MT\", value: \"GLMahjongTile\"}]}\r\n          name=\"tile-style\"\r\n          defaultValue=\"PostModern\"\r\n          onChange={this.props.tileStyle.handler} />\r\n        </fieldset>;\r\n  }\r\n  renderTileSuit()\r\n  {\r\n    return <fieldset className=\"tile-suit\">\r\n        <span className=\"radio-label\">suit</span>\r\n        <Radios choices={[\r\n          {display: \"bams/索/条\", value: \"bamboos\"},\r\n          {display: \"chars/萬/万\", value: \"characters\"},\r\n          {display: \"dots/筒/饼\", value: \"dots\"}]}\r\n          name=\"tile-suit\"\r\n          defaultValue=\"dots\"\r\n          onChange={this.props.tileSuit.handler} />\r\n        </fieldset>;\r\n  }\r\n  renderAllowPairs()\r\n  {\r\n    return <fieldset className=\"allow-pairs\">\r\n        <span className=\"radio-label\">pairs</span>\r\n        <Radios choices={[\r\n          {display: \"disallow\", value: \"disallow\"},\r\n          {display: \"allow\", value: \"allow\"},\r\n          {display: \"tile hog\", value: \"allow-hog\"}]}\r\n          name=\"allow-pairs\"\r\n          defaultValue=\"allow\"\r\n          onChange={this.props.allowPairs.handler} />\r\n        </fieldset>;\r\n  }\r\n  renderTimeBeforeDraw()\r\n  {\r\n    return <fieldset><Range\r\n        id=\"time-before-draw\"\r\n        label=\"time before draw\"\r\n        handler={this.props.timeBeforeDraw.handler}\r\n        value={{\r\n          min: 100,\r\n          max: 9900,\r\n          step: 100,\r\n          default: 1000,\r\n          display: (this.props.timeBeforeDraw.value/1000).toFixed(1)+\"s\",\r\n        }} /></fieldset>;\r\n  }\r\n  renderTimeBeforeSort()\r\n  {\r\n    return <fieldset><Range\r\n        id=\"time-before-sort\"\r\n        label=\"time before sort\"\r\n        handler={this.props.timeBeforeSort.handler}\r\n        value={{\r\n          min: 0,\r\n          max: 9900,\r\n          step: 100,\r\n          default: 500,\r\n          display: (this.props.timeBeforeSort.value/1000).toFixed(1)+\"s\",\r\n        }} /></fieldset>\r\n  }\r\n  renderTimeOfGame()\r\n  {\r\n    return <fieldset><Range\r\n        id=\"time-of-game\"\r\n        label=\"time of game\"\r\n        handler={this.props.timeOfGame.handler}\r\n        value={{\r\n          min: 30000,\r\n          max: 600000,\r\n          step: 1000,\r\n          default: 60000,\r\n          display: <>{formatDigits(this.props.timeOfGame.value/1000, 3)}s</>,\r\n        }}\r\n    /></fieldset>;\r\n  }\r\n  render()\r\n  {\r\n    return <form className=\"controls\">\r\n        {this.renderHuButton()}\r\n        {this.renderStatus()}\r\n        {this.renderStartButton()}\r\n        {this.renderHandLength()}\r\n        {this.renderTileStyle()}\r\n        {this.renderTileSuit()}\r\n        {this.renderAllowPairs()}\r\n        {this.renderTimeBeforeDraw()}\r\n        {this.renderTimeBeforeSort()}\r\n        {this.renderTimeOfGame()}\r\n    </form>;\r\n  }\r\n}\r\ntype RadiosProps =\r\n{\r\n  choices: Array<any>,\r\n  name: string,\r\n  onChange: Handler,\r\n  defaultValue: any,\r\n};\r\nclass Radios extends React.Component<RadiosProps>\r\n{\r\n  render()\r\n  {\r\n    return <>{this.props.choices.map((v, i) => <Radio\r\n        key={i}\r\n        name={this.props.name}\r\n        value={v.value}\r\n        display={v.display}\r\n        onChange={this.props.onChange}\r\n        defaultValue={this.props.defaultValue}\r\n    />)}</>;\r\n  }\r\n}\r\ntype RadioProps =\r\n{\r\n  name: string,\r\n  value: string,\r\n  onChange: Handler,\r\n  defaultValue: string,\r\n  display: string,\r\n};\r\nclass Radio extends React.Component<RadioProps>\r\n{\r\n  render()\r\n  {\r\n    return <><input type=\"radio\" name={this.props.name}\r\n        id={`${this.props.name}-${this.props.value}`}\r\n        value={this.props.value}\r\n        onChange={this.props.onChange}\r\n        defaultChecked={this.props.value===this.props.defaultValue} />\r\n      <label htmlFor={`${this.props.name}-${this.props.value}`}>\r\n        {this.props.display}\r\n      </label></>;\r\n  }\r\n}\r\ntype RangeProps =\r\n{\r\n  id: string,\r\n  label: string,\r\n  value: {\r\n    min: number,\r\n    max: number,\r\n    step: number,\r\n    default: number,\r\n    display:  string | JSX.Element,\r\n  },\r\n  handler: Handler,\r\n};\r\nclass Range extends React.Component<RangeProps>\r\n{\r\n  render()\r\n  {\r\n    const value = this.props.value;\r\n    const id = this.props.id;\r\n    return <>\r\n      <label htmlFor={id}>{this.props.label}</label>\r\n      <input type=\"range\" id={id} name={id}\r\n        min={value.min} max={value.max} step={value.step} defaultValue={value.default}\r\n        onChange={this.props.handler} />\r\n      <output htmlFor={id}>{value.display}</output>\r\n    </>;\r\n  }\r\n}\r\nclass StartButton extends React.Component<{onClick: ()=>void}>\r\n{\r\n  render()\r\n  {\r\n    return <div className=\"start-button\" onClick={this.props.onClick}><span className=\"start-text\">start</span></div>;\r\n  }\r\n}\r\nclass HuButton extends React.Component<{onClick: ()=>void}>\r\n{\r\n  render()\r\n  {\r\n    return <div className=\"hu-button\" onClick={this.props.onClick}><span className=\"hu-text\">Hu</span></div>;\r\n  }\r\n}\r\ntype ResultDialogProps = {\r\n  close: () => void,\r\n  isOpen: boolean,\r\n  score: number,\r\n  settings: string,\r\n};\r\nclass ResultDialog extends React.Component<ResultDialogProps>\r\n{\r\n  renderText(): string\r\n  {\r\n    return encodeURIComponent(`Score: ${this.props.score} (settings: ${this.props.settings})`);\r\n  }\r\n  render()\r\n  {\r\n    return <Modal\r\n      isOpen={this.props.isOpen}\r\n      shouldCloseOnOverlayClick={true}\r\n      className='result-content'\r\n      overlayClassName='result-overlay'\r\n      ><div className='result-score'>Your score: {this.props.score}</div>\r\n      <div className='result-controls'>\r\n        <div className='result-close' onClick={this.props.close}>Close</div>\r\n        <a className='result-tweet' href={`https://twitter.com/intent/tweet?text=${this.renderText()}&url=https%3A%2F%2Fmajiang.github.io%2Fmj%2Fqys%2F&hashtags=qysmj&related=__DaLong`}><div>Tweet</div></a>\r\n      </div>\r\n    </Modal>;\r\n  }\r\n}\r\n\r\nfunction formatDigits(n: number, d: number)\r\n{\r\n  const s = n.toString();\r\n  const l = s.length;\r\n  return <><span className=\"transparent\">{\"0\".repeat(d-l)}</span>{n}</>;\r\n}\r\n","import { createLogic as _createLogic, Logic, StandardAction } from 'redux-logic';\r\nimport { ActionCreator, isType } from 'typescript-fsa';\r\nimport { Dispatch, Done } from 'redux-logic-helper';\r\n\r\ntype Type = string;\r\ntype Object = object | undefined;\r\nexport function createLogic<\r\n  State extends object,\r\n  Payload extends Object = undefined,\r\n  Meta extends Object = undefined,\r\n  Dependency extends object = {},\r\n  Context extends Object = undefined,\r\n  Action extends StandardAction<Type, Payload, Meta> = StandardAction<Type, Payload, Meta>,\r\n>(actionCreator: ActionCreator<Payload>, config: {process: any, latest? : boolean, warnTimeout? : number}):\r\nLogic<State, any, any, Dependency, Context, Type>\r\n{\r\n  return _createLogic<State, any, any, Dependency, Context, Type, Action>({\r\n    ...config,\r\n    type: actionCreator.type,\r\n    process({ action, getState }: { action: any, getState?: () => State }, dispatch: Dispatch, done: Done){\r\n      if (!isType(action, actionCreator)) throw new TypeError();\r\n      config.process({action, getState}, dispatch, done);\r\n    },\r\n    validate: undefined,\r\n    transform: undefined,\r\n  });\r\n}\r\n","import { createLogicMiddleware } from 'redux-logic';\r\nimport { createLogic } from './redux-logic-helper';\r\nimport { Dispatch, Done, ActionOf, PayloadOf } from 'redux-logic-helper';\r\nimport { applyMiddleware, createStore, AnyAction } from 'redux';\r\nimport { actionCreatorFactory } from 'typescript-fsa';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport { fromTiles, Validator } from './hu';\r\nimport { Deal, nullDeal, discardTile, drawTile, dealHand, sortHand } from './deal';\r\nimport { Messages, appendMessage } from './gamecommon';\r\nconst actionCreator = actionCreatorFactory();\r\n\r\ntype GameState = {\r\n  deal: Deal,\r\n  score: number,\r\n  started: Date | null,\r\n  messages: Messages,\r\n};\r\nconst nullGame: GameState = {\r\n  deal: nullDeal,\r\n  score: 0,\r\n  started: null,\r\n  messages: [],\r\n};\r\n\r\nexport const gameActions = {\r\n  appendMessage: actionCreator<{message: string}>('appendMessage'),\r\n  discard: actionCreator<{position: number}>('discard'),\r\n  draw: actionCreator<{}>('draw'),\r\n  discardAndDraw: actionCreator<{position: number, timeBeforeDraw: number, timeBeforeSort: number}>('discardAndDraw'),\r\n  declareHu: actionCreator<{next: Deal, validator: Validator, timeBeforeDraw: number, timeBeforeSort: number}>('declareHu'),\r\n  reset: actionCreator<{deal: Deal}>('reset'),\r\n  resetAndDraw: actionCreator<{deal: Deal, timeBeforeDraw: number, timeBeforeSort: number}>('resetAndDraw'),\r\n  resetGame: actionCreator<({first: Deal, timeBeforeDraw: number, timeBeforeSort: number, timeOfGame: number})>('resetGame'),\r\n  newGame: actionCreator<({started: Date})>('newGame'),\r\n  sort: actionCreator<{}>('sort'),\r\n  sortAndDraw: actionCreator<{timeBetweenSortDraw: number}>('sortAndDraw'),\r\n  scoreHu: actionCreator<{time: Date, tbd: number}>('scoreHu'),\r\n  scoreCuohu: actionCreator<{}>('scoreCuohu'),\r\n  finish: actionCreator<{}>('finish'),\r\n}\r\n\r\nconst gameReducer = reducerWithInitialState(nullGame)\r\n.case(gameActions.discard, (state, payload) => ({...state,\r\n  deal: discardTile(state.deal, payload.position),\r\n}))\r\n.case(gameActions.draw, (state, _) => ({...state,\r\n  deal: drawTile(state.deal),\r\n}))\r\n.case(gameActions.reset, (state, payload) => ({...state,\r\n  deal: dealHand(payload.deal),\r\n}))\r\n.case(gameActions.sort, (state, _) => ({...state,\r\n  deal: sortHand(state.deal),\r\n}))\r\n.case(gameActions.newGame, (_, payload) => ({...nullGame,\r\n  started: payload.started,\r\n  messages: appendMessage([], `new game started at ${payload.started}`),\r\n}))\r\n.case(gameActions.appendMessage, (state, payload) => ({...state,\r\n  messages: appendMessage(state.messages, payload.message)\r\n}))\r\n.case(gameActions.scoreHu, (state, payload) => ({...state,\r\n  score: state.score + Math.sqrt(payload.tbd / (payload.time.valueOf() - state.deal.started!.valueOf())),\r\n}))\r\n.case(gameActions.scoreCuohu, (state, _) => ({...state,\r\n  score: state.score - 1,\r\n}))\r\n.case(gameActions.finish, (state, payload) => {\r\n  console.log(`finish at: ${new Date()}`);\r\n  console.log(state);\r\n  console.log(payload);\r\n  return {...nullGame,\r\n    score: state.score,\r\n    messages: appendMessage([], `finish! score: ${~~(state.score * 1000)}`),\r\n};})\r\n;\r\n\r\nfunction dispatchWaitDispatch(firstAction: AnyAction, waitTimeMs: number, secondAction: AnyAction, dispatch: Dispatch, done: Done)\r\n{\r\n  dispatch(firstAction);\r\n  setTimeout(() => {\r\n    dispatch(secondAction);\r\n    done();\r\n  }, waitTimeMs);\r\n}\r\n\r\nfunction dispatchSequence(actions: AnyAction[], dispatch: Dispatch, done: Done)\r\n{\r\n  actions.forEach(action => {\r\n    dispatch(action);\r\n  });\r\n  done();\r\n}\r\n\r\nconst discardAndDrawLogic = createLogic<GameState, PayloadOf<typeof gameActions.discardAndDraw>>(\r\n  gameActions.discardAndDraw,\r\n  {\r\n    process({ action }: { action: ActionOf<typeof gameActions.discardAndDraw>}, dispatch: Dispatch, done: Done)\r\n    {\r\n      const [waitTimeMs, nextAction] = (action.payload.timeBeforeSort <= action.payload.timeBeforeDraw)\r\n        ? [action.payload.timeBeforeSort, gameActions.sortAndDraw({timeBetweenSortDraw: action.payload.timeBeforeDraw - action.payload.timeBeforeSort})]\r\n        : [action.payload.timeBeforeDraw, gameActions.draw({})];\r\n      dispatchWaitDispatch(\r\n        gameActions.discard({position: action.payload.position}),\r\n        waitTimeMs, nextAction,\r\n        dispatch, done);\r\n    }\r\n  });\r\nconst resetAndDrawLogic = createLogic(\r\n  gameActions.resetAndDraw,\r\n  {\r\n    process({ action }: { action: ActionOf<typeof gameActions.resetAndDraw> }, dispatch: Dispatch, done: Done)\r\n    {\r\n      console.log(action);\r\n      const [waitTimeMs, nextAction] = (action.payload.timeBeforeSort <= action.payload.timeBeforeDraw)\r\n        ? [action.payload.timeBeforeSort, gameActions.sortAndDraw({timeBetweenSortDraw: action.payload.timeBeforeDraw - action.payload.timeBeforeSort})]\r\n        : [action.payload.timeBeforeDraw, gameActions.draw({})];\r\n      dispatchWaitDispatch(\r\n        gameActions.reset({deal: action.payload.deal}),\r\n        waitTimeMs, nextAction,\r\n        dispatch, done);\r\n    }\r\n  });\r\nconst sortAndDrawLogic = createLogic(\r\n  gameActions.sortAndDraw,\r\n  {\r\n    process({ action }: { action: ActionOf<typeof gameActions.sortAndDraw> }, dispatch: Dispatch, done: Done)\r\n    {\r\n      dispatchWaitDispatch(\r\n        gameActions.sort({}),\r\n        action.payload.timeBetweenSortDraw,\r\n        gameActions.draw({}),\r\n        dispatch, done);\r\n    }\r\n  });\r\nconst resetGamelogic = createLogic(\r\n  gameActions.resetGame,\r\n  {\r\n    latest: true,\r\n    warnTimeout: 0,\r\n    process({ action }: { action: ActionOf<typeof gameActions.resetGame> }, dispatch: Dispatch, done: Done)\r\n    {\r\n      console.log(action.payload);\r\n      dispatch(gameActions.newGame({started: action.payload.first.started!}));\r\n      dispatchWaitDispatch(\r\n        gameActions.resetAndDraw({\r\n          deal: action.payload.first,\r\n          timeBeforeDraw: action.payload.timeBeforeDraw,\r\n          timeBeforeSort: action.payload.timeBeforeSort,\r\n        }),\r\n        action.payload.timeOfGame,\r\n        gameActions.finish({}),\r\n        dispatch, done);\r\n      console.log(`${new Date()}`);\r\n    }\r\n  });\r\nconst declareHuLogic = createLogic(\r\n  gameActions.declareHu,\r\n  {\r\n    process({ action, getState }: { action: ActionOf<typeof gameActions.declareHu>, getState: () => GameState }, dispatch: Dispatch, done: Done)\r\n    {\r\n      const hu = action.payload.validator(fromTiles(getState().deal.hand));\r\n      const firstAction = hu\r\n        ? gameActions.scoreHu({time: action.payload.next.started!, tbd: action.payload.timeBeforeDraw})\r\n        : gameActions.scoreCuohu({});\r\n      dispatchSequence([\r\n        firstAction,\r\n        gameActions.appendMessage({message: `declared ${hu} hu`}),\r\n        gameActions.resetAndDraw({\r\n          deal: action.payload.next,\r\n          timeBeforeDraw: action.payload.timeBeforeDraw,\r\n          timeBeforeSort: action.payload.timeBeforeSort,\r\n        })], dispatch, done);\r\n    }\r\n  });\r\nconst logics = [\r\n  discardAndDrawLogic,\r\n  resetAndDrawLogic,\r\n  resetGamelogic,\r\n  sortAndDrawLogic,\r\n  declareHuLogic];\r\nexport const gameStore = createStore(gameReducer, applyMiddleware(createLogicMiddleware(logics)));\r\n","import React from 'react';\nimport { connect, Provider } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Game } from './components';\nimport { gameActions, gameStore } from './gamelogics';\nimport { shufflePile } from './gamecommon';\nimport './App.css';\n\nconst ConnectedGame = connect(\n    (storeState) => (storeState),\n    (dispatch) => ({actions: bindActionCreators(gameActions, dispatch)}),\n)(Game);\n\nfunction App() {\n  return (\n    <Provider store={gameStore}>\n      <ConnectedGame initializer={shufflePile} />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}