{"version":3,"sources":["gamecommon.ts","common.ts","hu.ts","components.tsx","gamelogics.ts","App.js","serviceWorker.js","index.js"],"names":["rank","tile","shufflePile","m","ranks","pile","Array","from","keys","i","Math","floor","random","range","n","isNormalHu","hand","entries","handCopied","isSets","gamecommon","c","isPairs","sets","pairs","Game","props","handleTimeRestChanged","started","timeRest","valueOf","state","timeOfGame","Date","setState","handleHandLengthChanged","e","handLength","parseInt","target","value","handleTileStyleChanged","tileStyle","handleTileSuitChanged","tileSuit","handleAllowPairsChanged","allowPairs","handleTimeBeforeDrawChanged","timeBeforeDraw","handleTimeBeforeSortChanged","timeBeforeSort","handleTimeOfGameChanged","handleKeydown","keyCode","preventDefault","actions","declareHu","validator","huValidator","p","initializer","time","discardAndDraw","position","length","resetGame","console","log","findIndex","index","displayTime","document","addEventListener","this","setInterval","removeEventListener","clearInterval","PostModernBamboos","PostModernCharacters","PostModernDots","GLMahjongTileBamboos","GLMahjongTileCharacters","GLMahjongTileDots","count","isPairsWithHog","tileClass","tiles","discard","score","hu","reset","handler","messages","React","Component","Hand","key","onClick","className","map","renderTile","Tile","src","imageUrl","style","generateStyle","alt","toString","TypeError","r","PostModernTile","clip","top","right","bottom","left","GLMahjongTile","suit","transform","Status","v","Controls","toFixed","choices","display","formatDigits","name","defaultValue","onChange","id","label","min","max","step","default","renderHuButton","renderStatus","renderStartButton","renderHandLength","renderTileStyle","renderTileSuit","renderAllowPairs","renderTimeBeforeDraw","renderTimeBeforeSort","renderTimeOfGame","Radios","Radio","type","defaultChecked","htmlFor","Range","StartButton","HuButton","d","l","repeat","actionCreator","actionCreatorFactory","gameActions","appendMessage","draw","resetAndDraw","newGame","sort","sortAndDraw","scoreHu","scoreCuohu","finish","discardAndDrawLogic","createLogic","process","dispatch","done","action","isType","payload","setTimeout","timeBetweenSortDraw","resetAndDrawLogic","sortAndDrawLogic","resetGamelogic","latest","declareHuLogic","ret","fill","forEach","fromTiles","tbd","message","nullGame","handStarted","gameReducer","reducerWithInitialState","case","discardTile","drawTile","slice","sortHand","sqrt","newMessage","gameStore","createStore","applyMiddleware","createLogicMiddleware","splice","push","a","b","ConnectedGame","connect","storeState","bindActionCreators","App","store","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.64d0f3be.chunk.js","sourcesContent":["export type Hand = Array<number>;\r\nexport type Pile = Array<number>;\r\nexport type Tile = number;\r\nexport const ranks = 9;\r\nexport const duplicates = 4;\r\nexport const deck = ranks * duplicates;\r\nexport function rank(tile: Tile): number\r\n{\r\n    return ~~(tile/duplicates);\r\n}\r\nexport function shufflePile()\r\n{\r\n  let m = deck;\r\n  let pile = Array.from(Array(m).keys());\r\n  while (m)\r\n  {\r\n    const i = Math.floor(Math.random() * (m--));\r\n    [pile[i], pile[m]] = [pile[m], pile[i]];\r\n  }\r\n  return pile;\r\n}\r\nexport const setSize = 3;\r\nexport const pairSize = 2;\r\n","export function* range(n: number)\r\n{\r\n  for (let i = 0; i < n; i++) yield i;\r\n}\r\n","import * as gamecommon from './gamecommon';\r\nimport { range } from './common';\r\n\r\nexport function fromTiles(hand: gamecommon.Hand): Array<number>\r\n{\r\n  let ret = new Array(gamecommon.ranks).fill(0);\r\n  hand.forEach(tile => {ret[gamecommon.rank(tile)] += 1});\r\n  return ret;\r\n}\r\n\r\nexport type Validator = (hand: Array<number>) => boolean;\r\n\r\nexport function isNormalHu(hand: Array<number>): boolean\r\n{\r\n  for (const [rank, count] of hand.entries())\r\n  {\r\n    if (count < gamecommon.pairSize)\r\n    continue;\r\n    let handCopied = [...hand];\r\n    handCopied[rank] -= gamecommon.pairSize;\r\n    if (isSets(handCopied)) return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function isSets(hand: Array<number>): boolean\r\n{\r\n  for (const rank of range(gamecommon.ranks - gamecommon.setSize + 1))\r\n  {\r\n    if (hand[rank] < 0) return false;\r\n    hand[rank] %= gamecommon.setSize;\r\n    const c = hand[rank];\r\n    for (const d of range(gamecommon.setSize))\r\n    {\r\n      hand[rank + d] -= c;\r\n    }\r\n  }\r\n  for (const count of hand)\r\n  {\r\n    if (count % gamecommon.setSize) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function isPairs(hand: Array<number>): boolean\r\n{\r\n  let sets = 0;\r\n  let pairs = 0;\r\n  for (const count of hand)\r\n  {\r\n    switch (count)\r\n    {\r\n      case 0: continue;\r\n      case gamecommon.setSize: sets += 1; continue;\r\n      case gamecommon.pairSize: pairs += 1; continue;\r\n      default: return false;\r\n    }\r\n  }\r\n  return (sets <= 1) && (pairs % gamecommon.setSize === 1);\r\n}\r\n\r\nexport function isPairsWithHog(hand: Array<number>): boolean\r\n{\r\n  let sets = 0;\r\n  let pairs = 0;\r\n  for (const count of hand)\r\n  {\r\n    if (count === gamecommon.setSize)\r\n    {\r\n      sets += 1;\r\n      continue;\r\n    }\r\n    if (count % gamecommon.pairSize)\r\n      return false;\r\n    pairs += count / gamecommon.pairSize;\r\n  }\r\n  return (sets <= 1) && (pairs % gamecommon.setSize === 1);\r\n}\r\n","import React from 'react';\r\nimport * as gamecommon from './gamecommon';\r\nimport { isNormalHu, isPairs, isPairsWithHog, Validator } from './hu';\r\n\r\ntype AllowPairs = \"disallow\" | \"allow\" | \"allow-hog\";\r\ntype TileStyle = \"PostModern\" | \"GLMahjongTile\";\r\ntype TileSuit = \"bamboos\" | \"characters\" | \"dots\";\r\n\r\ntype GameProps =\r\n{\r\n  initializer: ()=>Array<number>,\r\n  hand: gamecommon.Hand,\r\n  p: number,\r\n  pile: gamecommon.Pile,\r\n  actions: any,\r\n  score: number | null,\r\n  started: Date | null,\r\n  messages: Array<[number, string]>\r\n};\r\ntype GameState =\r\n{\r\n  handLength: number,\r\n  tileStyle: TileStyle,\r\n  tileSuit: TileSuit,\r\n  allowPairs: AllowPairs,\r\n  timeBeforeDraw: number,\r\n  timeBeforeSort: number,\r\n  timeOfGame: number,\r\n  timeRest: number | null,\r\n  displayTime: NodeJS.Timeout | null,\r\n};\r\n\r\nexport class Game extends React.Component<GameProps, GameState>\r\n{\r\n  constructor (props: GameProps)\r\n  {\r\n    super (props);\r\n    this.state = {\r\n      handLength: 13,\r\n      tileStyle: \"PostModern\",\r\n      tileSuit: \"dots\",\r\n      allowPairs: \"allow\",\r\n      timeBeforeDraw: 1000,\r\n      timeBeforeSort: 500,\r\n      timeOfGame: 60000,\r\n      timeRest: null,\r\n      displayTime: null,\r\n    };\r\n  }\r\n  handleTimeRestChanged = () => {\r\n    if (this.props.started == null)\r\n      return;\r\n    let timeRest = this.props.started.valueOf() + this.state.timeOfGame - new Date().valueOf();\r\n    if (timeRest < 0) timeRest = 0;\r\n    this.setState({timeRest});\r\n  };\r\n  handleHandLengthChanged = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n  {\r\n    this.setState({handLength: parseInt(e.target.value)});\r\n  };\r\n  handleTileStyleChanged = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n  {\r\n    this.setState({tileStyle: e.target.value as TileStyle});\r\n  };\r\n  handleTileSuitChanged = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n  {\r\n    this.setState({tileSuit: e.target.value as TileSuit});\r\n  };\r\n  handleAllowPairsChanged = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n  {\r\n    this.setState({allowPairs: e.target.value as AllowPairs});\r\n  }\r\n  handleTimeBeforeDrawChanged = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n  {\r\n    this.setState({timeBeforeDraw: parseInt(e.target.value)});\r\n  };\r\n  handleTimeBeforeSortChanged = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n  {\r\n    this.setState({timeBeforeSort: parseInt(e.target.value)});\r\n  };\r\n  handleTimeOfGameChanged = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n  {\r\n    this.setState({timeOfGame: parseInt(e.target.value)});\r\n  };\r\n  handleKeydown = (e: KeyboardEvent) =>\r\n  {\r\n    if (e.keyCode === 32) // space: hu\r\n    {\r\n      e.preventDefault();\r\n      return this.props.actions.declareHu({\r\n        validator: this.huValidator(),\r\n        p: this.state.handLength,\r\n        pile: this.props.initializer(),\r\n        hand: this.props.hand,\r\n        time: new Date(),\r\n        timeBeforeDraw: this.state.timeBeforeDraw,\r\n        timeBeforeSort: this.state.timeBeforeSort,\r\n      });\r\n    }\r\n    if (e.keyCode < 48) return;\r\n    if (e.keyCode === 48) // 0: drawn\r\n    {\r\n      return this.props.actions.discardAndDraw({\r\n        p: this.props.p,\r\n        pile: this.props.pile,\r\n        position: this.props.hand.length - 1,\r\n        timeBeforeDraw: this.state.timeBeforeDraw,\r\n        timeBeforeSort: this.state.timeBeforeSort});\r\n    }\r\n    if (e.keyCode === 83) // s: start\r\n    {\r\n      return this.props.actions.resetGame({\r\n        started: new Date(),\r\n        pile: this.props.initializer(),\r\n        p: this.state.handLength,\r\n        timeBeforeDraw: this.state.timeBeforeDraw,\r\n        timeBeforeSort: this.state.timeBeforeSort,\r\n        timeOfGame: this.state.timeOfGame,\r\n      });\r\n    }\r\n    if (58 <= e.keyCode) return;\r\n    console.log(`keyCode: ${e.keyCode}`);\r\n    let rank = e.keyCode - 49;\r\n    console.log(`rank: ${rank}`);\r\n    let position = this.props.hand.findIndex((tile, index) => {\r\n      console.log(`${index}: ${tile}`);\r\n      return (gamecommon.rank(tile) === rank);\r\n    });\r\n    console.log(`position: ${position}`);\r\n    if (position < 0)\r\n    {\r\n      return;\r\n    }\r\n    this.props.actions.discardAndDraw({\r\n      p: this.props.p,\r\n      pile: this.props.pile,\r\n      position: position,\r\n      timeBeforeDraw: this.state.timeBeforeDraw,\r\n      timeBeforeSort: this.state.timeBeforeSort});\r\n  };\r\n  componentDidMount()\r\n  {\r\n    document.addEventListener(\"keydown\", this.handleKeydown);\r\n    this.setState({displayTime: setInterval(this.handleTimeRestChanged, 10)});\r\n  }\r\n  componentWillUnmount()\r\n  {\r\n    document.removeEventListener(\"keydown\", this.handleKeydown);\r\n    clearInterval(this.state.displayTime!);\r\n  }\r\n  tileClass(): React.ComponentClass<TileProps>\r\n  {\r\n    switch (this.state.tileStyle)\r\n    {\r\n      case 'PostModern': switch (this.state.tileSuit)\r\n      {\r\n        case 'bamboos': return PostModernBamboos;\r\n        case 'characters': return PostModernCharacters;\r\n        case 'dots': return PostModernDots;\r\n      }\r\n      case 'GLMahjongTile': switch (this.state.tileSuit)\r\n      {\r\n        case 'bamboos': return GLMahjongTileBamboos;\r\n        case 'characters': return GLMahjongTileCharacters;\r\n        case 'dots': return GLMahjongTileDots;\r\n      }\r\n    }\r\n  }\r\n  huValidator(): Validator\r\n  {\r\n    switch (this.state.allowPairs)\r\n    {\r\n      case 'disallow': return isNormalHu;\r\n      case 'allow': return (hand) => isNormalHu(hand) || isPairs(hand);\r\n      case 'allow-hog': return (hand) => isNormalHu(hand) || isPairs(hand) || isPairsWithHog(hand);\r\n    }\r\n  }\r\n  render()\r\n  {\r\n    return <>\r\n        <Hand tileClass={this.tileClass()} tiles={this.props.hand}\r\n          discard={(position)=>this.props.actions.discardAndDraw({\r\n            p: this.props.p,\r\n            pile: this.props.pile,\r\n            position: position,\r\n            timeBeforeDraw: this.state.timeBeforeDraw,\r\n            timeBeforeSort: this.state.timeBeforeSort})} />\r\n        <Controls\r\n          score={this.props.score}\r\n          time={this.state.timeRest}\r\n          hu={()=>this.props.actions.declareHu({\r\n            validator: this.huValidator(),\r\n            p: this.state.handLength,\r\n            pile: this.props.initializer(),\r\n            hand: this.props.hand,\r\n            time: new Date(),\r\n            timeBeforeDraw: this.state.timeBeforeDraw,\r\n            timeBeforeSort: this.state.timeBeforeSort,\r\n          })}\r\n          reset={()=>this.props.actions.resetGame({\r\n            started: new Date(),\r\n            pile: this.props.initializer(),\r\n            p: this.state.handLength,\r\n            timeBeforeDraw: this.state.timeBeforeDraw,\r\n            timeBeforeSort: this.state.timeBeforeSort})}\r\n          handLength={{handler: this.handleHandLengthChanged}}\r\n          tileStyle={{handler: this.handleTileStyleChanged}}\r\n          tileSuit={{handler: this.handleTileSuitChanged}}\r\n          allowPairs={{handler: this.handleAllowPairsChanged}}\r\n          timeBeforeDraw={{handler: this.handleTimeBeforeDrawChanged, value: this.state.timeBeforeDraw}}\r\n          timeBeforeSort={{handler: this.handleTimeBeforeSortChanged, value: this.state.timeBeforeSort}}\r\n          timeOfGame={{handler: this.handleTimeOfGameChanged, value: this.state.timeOfGame}}\r\n        />\r\n        <Status messages={this.props.messages} />\r\n    </>;\r\n  }\r\n}\r\n\r\ntype HandProps =\r\n{\r\n  tiles: gamecommon.Hand,\r\n  tileClass: React.ComponentClass<TileProps>,\r\n  discard: (position: number) => void,\r\n};\r\nclass Hand extends React.Component<HandProps>\r\n{\r\n  renderTile(i: number, tile: gamecommon.Tile)\r\n  {\r\n    return (<this.props.tileClass key={tile} rank={gamecommon.rank(tile)} onClick={()=>this.props.discard(i)}/>);\r\n  }\r\n  render()\r\n  {\r\n    return <div className=\"hand\">\r\n        {this.props.tiles.map((tile, i)=>this.renderTile(i, tile))}\r\n        </div>;\r\n  }\r\n}\r\n\r\ntype TileProps =\r\n{\r\n  rank: number,\r\n  onClick: () => void,\r\n};\r\n\r\nclass Tile extends React.Component<TileProps>\r\n{\r\n  render()\r\n  {\r\n    return <div className={`tile ${this.tileClass()}`} onClick={this.props.onClick}>\r\n      <img src={this.imageUrl()}\r\n      style={this.generateStyle(this.props.rank)}\r\n      alt={(this.props.rank+1).toString()}/></div>\r\n  }\r\n  tileClass(): string\r\n  {\r\n    throw new TypeError(\"tileClass() is not implemented\");\r\n  }\r\n  imageUrl(): string\r\n  {\r\n    throw new TypeError(\"imageUrl() is not implemented\");\r\n  }\r\n  generateStyle(r: number): any{throw new TypeError(\"\");}\r\n}\r\n\r\nclass PostModernTile extends Tile\r\n{\r\n  generateStyle(r: number)\r\n  {\r\n    return {\r\n        clip: `rect(${this.top(r)}, ${this.right(r)}, ${this.bottom(r)}, ${this.left(r)})`,\r\n        top: -this.top(r),\r\n        left: -this.left(r),\r\n    };\r\n  }\r\n  tileClass()\r\n  {\r\n    return 'pm';\r\n  }\r\n  right(r: number): number{throw new TypeError(\"right() is not implemented\");}\r\n  left(r: number): number{throw new TypeError(\"left() is not implemented\");}\r\n  top(r: number){return 0;}\r\n  bottom(r: number){return 88;}\r\n  imageUrl()\r\n  {\r\n    return \"postmodern.svg\";\r\n  }\r\n}\r\n\r\nclass PostModernBamboos extends PostModernTile\r\n{\r\n  left(r: number){return (24+r)*64;}\r\n  right(r: number){return (25+r)*64;}\r\n}\r\n\r\nclass PostModernCharacters extends PostModernTile\r\n{\r\n  left(r: number){return (15+r)*64;}\r\n  right(r: number){return (16+r)*64;}\r\n}\r\n\r\nclass PostModernDots extends PostModernTile\r\n{\r\n  left(r: number){return (0+r)*64;}\r\n  right(r: number){return (1+r)*64;}\r\n}\r\n\r\nclass GLMahjongTile extends Tile\r\n{\r\n  suit(): string{throw new TypeError(\"suit() is not implemented\");}\r\n  imageUrl()\r\n  {\r\n    return `gl-mahjongtile-svg/${this.suit()}-${this.props.rank}.svg`;\r\n  }\r\n  tileClass()\r\n  {\r\n    return 'gl';\r\n  }\r\n  generateStyle(r: number)\r\n  {\r\n    return {\r\n      transform: 'scale(1, -1)',\r\n    };\r\n  }\r\n}\r\n\r\nclass GLMahjongTileBamboos extends GLMahjongTile\r\n{\r\n  suit()\r\n  {\r\n    return 'b';\r\n  }\r\n}\r\n\r\nclass GLMahjongTileCharacters extends GLMahjongTile\r\n{\r\n  suit()\r\n  {\r\n    return 'c';\r\n  }\r\n}\r\n\r\nclass GLMahjongTileDots extends GLMahjongTile\r\n{\r\n  suit()\r\n  {\r\n    return 'd';\r\n  }\r\n}\r\n\r\ntype StatusProps =\r\n{\r\n  messages: Array<[number, string]>\r\n};\r\nclass Status extends React.Component<StatusProps>\r\n{\r\n  render()\r\n  {\r\n    return <ul className=\"status\">\r\n      {this.props.messages.map((v) => <li key={v[0]}>{v[1]}</li>)}\r\n    </ul>;\r\n  }\r\n}\r\n\r\ntype Handler = (e: React.ChangeEvent<HTMLInputElement>) => void;\r\ntype HasHandler =\r\n{\r\n  handler: Handler\r\n};\r\ntype HasHandlerAndValue =\r\n{\r\n  handler: Handler,\r\n  value: any,\r\n}\r\ntype ControlsProps =\r\n{\r\n  reset: () => void,\r\n  hu: () => void,\r\n  score: number | null,\r\n  time: number | null,\r\n  handLength: HasHandler,\r\n  tileStyle: HasHandler,\r\n  tileSuit: HasHandler,\r\n  allowPairs: HasHandler,\r\n  timeBeforeDraw: HasHandlerAndValue,\r\n  timeBeforeSort: HasHandlerAndValue,\r\n  timeOfGame: HasHandlerAndValue,\r\n};\r\n\r\nclass Controls extends React.Component<ControlsProps>\r\n{\r\n  renderHuButton()\r\n  {\r\n    return <HuButton onClick={this.props.hu} />;\r\n  }\r\n  renderStatus()\r\n  {\r\n    return <div className=\"status-labels\">\r\n      <div className=\"status-label\">{(this.props.score == null) ? `` : `score: ${~~(this.props.score * 1000)}`}</div>\r\n      <div className=\"status-label\">{(this.props.time == null) ? `` : `time: ${this.props.time.toFixed(2)}`}</div>\r\n    </div>;\r\n  }\r\n  renderStartButton()\r\n  {\r\n    return <StartButton onClick={this.props.reset} />;\r\n  }\r\n  renderHandLength()\r\n  {\r\n    return <fieldset className=\"hand-length\">\r\n        <span className=\"radio-label\">#tiles</span>\r\n        <Radios choices={[1, 4, 7, 10, 13, 16].map((v) =>\r\n          ({display: formatDigits(v, 2), value: v}))}\r\n          name=\"hand-length\"\r\n          defaultValue={13}\r\n          onChange={this.props.handLength.handler} />\r\n        </fieldset>;\r\n  }\r\n  renderTileStyle()\r\n  {\r\n    return <fieldset className=\"tile-style\">\r\n        <span className=\"radio-label\">tile style</span>\r\n        <Radios choices={[\r\n          {display: \"PostModern\", value: \"PostModern\"},\r\n          {display: \"GL-MT\", value: \"GLMahjongTile\"}]}\r\n          name=\"tile-style\"\r\n          defaultValue=\"PostModern\"\r\n          onChange={this.props.tileStyle.handler} />\r\n        </fieldset>;\r\n  }\r\n  renderTileSuit()\r\n  {\r\n    return <fieldset className=\"tile-suit\">\r\n        <span className=\"radio-label\">suit</span>\r\n        <Radios choices={[\r\n          {display: \"bams/索/条\", value: \"bamboos\"},\r\n          {display: \"chars/萬/万\", value: \"characters\"},\r\n          {display: \"dots/筒/饼\", value: \"dots\"}]}\r\n          name=\"tile-suit\"\r\n          defaultValue=\"dots\"\r\n          onChange={this.props.tileSuit.handler} />\r\n        </fieldset>;\r\n  }\r\n  renderAllowPairs()\r\n  {\r\n    return <fieldset className=\"allow-pairs\">\r\n        <span className=\"radio-label\">pairs</span>\r\n        <Radios choices={[\r\n          {display: \"disallow\", value: \"disallow\"},\r\n          {display: \"allow\", value: \"allow\"},\r\n          {display: \"tile hog\", value: \"allow-hog\"}]}\r\n          name=\"allow-pairs\"\r\n          defaultValue=\"allow\"\r\n          onChange={this.props.allowPairs.handler} />\r\n        </fieldset>;\r\n  }\r\n  renderTimeBeforeDraw()\r\n  {\r\n    return <fieldset><Range\r\n        id=\"time-before-draw\"\r\n        label=\"time before draw\"\r\n        handler={this.props.timeBeforeDraw.handler}\r\n        value={{\r\n          min: 100,\r\n          max: 9900,\r\n          step: 100,\r\n          default: 1000,\r\n          display: (this.props.timeBeforeDraw.value/1000).toFixed(1)+\"s\",\r\n        }} /></fieldset>;\r\n  }\r\n  renderTimeBeforeSort()\r\n  {\r\n    return <fieldset><Range\r\n        id=\"time-before-sort\"\r\n        label=\"time before sort\"\r\n        handler={this.props.timeBeforeSort.handler}\r\n        value={{\r\n          min: 0,\r\n          max: 9900,\r\n          step: 100,\r\n          default: 500,\r\n          display: (this.props.timeBeforeSort.value/1000).toFixed(1)+\"s\",\r\n        }} /></fieldset>\r\n  }\r\n  renderTimeOfGame()\r\n  {\r\n    return <fieldset><Range\r\n        id=\"time-of-game\"\r\n        label=\"time of game\"\r\n        handler={this.props.timeOfGame.handler}\r\n        value={{\r\n          min: 30000,\r\n          max: 600000,\r\n          step: 1000,\r\n          default: 60000,\r\n          display: <>{formatDigits(this.props.timeOfGame.value/1000, 3)}s</>,\r\n        }}\r\n    /></fieldset>;\r\n  }\r\n  render()\r\n  {\r\n    return <form className=\"controls\">\r\n        {this.renderHuButton()}\r\n        {this.renderStatus()}\r\n        {this.renderStartButton()}\r\n        {this.renderHandLength()}\r\n        {this.renderTileStyle()}\r\n        {this.renderTileSuit()}\r\n        {this.renderAllowPairs()}\r\n        {this.renderTimeBeforeDraw()}\r\n        {this.renderTimeBeforeSort()}\r\n        {this.renderTimeOfGame()}\r\n    </form>;\r\n  }\r\n}\r\ntype RadiosProps =\r\n{\r\n  choices: Array<any>,\r\n  name: string,\r\n  onChange: Handler,\r\n  defaultValue: any,\r\n};\r\nclass Radios extends React.Component<RadiosProps>\r\n{\r\n  render()\r\n  {\r\n    return <>{this.props.choices.map((v, i) => <Radio\r\n        key={i}\r\n        name={this.props.name}\r\n        value={v.value}\r\n        display={v.display}\r\n        onChange={this.props.onChange}\r\n        defaultValue={this.props.defaultValue}\r\n    />)}</>;\r\n  }\r\n}\r\ntype RadioProps =\r\n{\r\n  name: string,\r\n  value: string,\r\n  onChange: Handler,\r\n  defaultValue: string,\r\n  display: string,\r\n};\r\nclass Radio extends React.Component<RadioProps>\r\n{\r\n  render()\r\n  {\r\n    return <><input type=\"radio\" name={this.props.name}\r\n        id={`${this.props.name}-${this.props.value}`}\r\n        value={this.props.value}\r\n        onChange={this.props.onChange}\r\n        defaultChecked={this.props.value===this.props.defaultValue} />\r\n      <label htmlFor={`${this.props.name}-${this.props.value}`}>\r\n        {this.props.display}\r\n      </label></>;\r\n  }\r\n}\r\ntype RangeProps =\r\n{\r\n  id: string,\r\n  label: string,\r\n  value: {\r\n    min: number,\r\n    max: number,\r\n    step: number,\r\n    default: number,\r\n    display:  string | JSX.Element,\r\n  },\r\n  handler: Handler,\r\n};\r\nclass Range extends React.Component<RangeProps>\r\n{\r\n  render()\r\n  {\r\n    const value = this.props.value;\r\n    const id = this.props.id;\r\n    return <>\r\n      <label htmlFor={id}>{this.props.label}</label>\r\n      <input type=\"range\" id={id} name={id}\r\n        min={value.min} max={value.max} step={value.step} defaultValue={value.default}\r\n        onChange={this.props.handler} />\r\n      <output htmlFor={id}>{value.display}</output>\r\n    </>;\r\n  }\r\n}\r\nclass StartButton extends React.Component<{onClick: ()=>void}>\r\n{\r\n  render()\r\n  {\r\n    return <div className=\"start-button\" onClick={this.props.onClick}><span className=\"start-text\">start</span></div>;\r\n  }\r\n}\r\nclass HuButton extends React.Component<{onClick: ()=>void}>\r\n{\r\n  render()\r\n  {\r\n    return <div className=\"hu-button\" onClick={this.props.onClick}><span className=\"hu-text\">Hu</span></div>;\r\n  }\r\n}\r\n\r\nfunction formatDigits(n: number, d: number)\r\n{\r\n  const s = n.toString();\r\n  const l = s.length;\r\n  return <><span className=\"transparent\">{\"0\".repeat(d-l)}</span>{n}</>;\r\n}\r\n","import { createLogic, createLogicMiddleware } from 'redux-logic';\r\nimport { Dispatch, Done} from 'redux-logic-helper';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { actionCreatorFactory, isType } from 'typescript-fsa';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport { Hand, Pile, Tile } from './gamecommon';\r\nimport { fromTiles, Validator } from './hu';\r\nconst actionCreator = actionCreatorFactory();\r\n\r\nexport const gameActions = {\r\n  appendMessage: actionCreator<{message: string}>('appendMessage'),\r\n  discard: actionCreator<{position: number}>('discard'),\r\n  draw: actionCreator<{tile: Tile}>('draw'),\r\n  discardAndDraw: actionCreator<{p: number, pile: Pile, position: number, timeBeforeDraw: number, timeBeforeSort: number}>('discardAndDraw'),\r\n  declareHu: actionCreator<{p: number, pile: Pile, hand: Hand, validator: Validator, time: Date, timeBeforeDraw: number, timeBeforeSort: number}>('declareHu'),\r\n  reset: actionCreator<{pile: Pile, p: number, started: Date}>('reset'),\r\n  resetAndDraw: actionCreator<{pile: Pile, p: number, started: Date, timeBeforeDraw: number, timeBeforeSort: number}>('resetAndDraw'),\r\n  resetGame: actionCreator<({started: Date, pile: Pile, p: number, timeBeforeDraw: number, timeBeforeSort: number, timeOfGame: number})>('resetGame'),\r\n  newGame: actionCreator<({started: Date})>('newGame'),\r\n  sort: actionCreator<void>('sort'),\r\n  sortAndDraw: actionCreator<{pile: Pile, p: number, timeBetweenSortDraw: number}>('sortAndDraw'),\r\n  scoreHu: actionCreator<{time: Date, tbd: number}>('scoreHu'),\r\n  scoreCuohu: actionCreator<{}>('scoreCuohu'),\r\n  finish: actionCreator<{}>('finish'),\r\n}\r\nconst discardAndDrawLogic = createLogic({\r\n  type: gameActions.discardAndDraw.type,\r\n  process({ action }: { action: any }, dispatch: Dispatch, done: Done)\r\n  {\r\n    if (!isType(action, gameActions.discardAndDraw)) throw new TypeError();\r\n      dispatch(gameActions.discard({position: action.payload.position}));\r\n    if (action.payload.timeBeforeSort <= action.payload.timeBeforeDraw)\r\n    {\r\n      setTimeout(() => {\r\n        dispatch(gameActions.sortAndDraw({pile: action.payload.pile, p: action.payload.p, timeBetweenSortDraw: action.payload.timeBeforeDraw - action.payload.timeBeforeSort}));\r\n        done();\r\n      }, action.payload.timeBeforeSort);\r\n    }\r\n    else\r\n      setTimeout(() => {\r\n        dispatch(gameActions.draw({tile: action.payload.pile[action.payload.p]}));\r\n        done();\r\n      }, action.payload.timeBeforeDraw);\r\n  }\r\n});\r\nconst resetAndDrawLogic = createLogic({\r\n  type: gameActions.resetAndDraw.type,\r\n  process({  action }: { action: any }, dispatch: Dispatch, done: Done)\r\n  {\r\n    if (!isType(action, gameActions.resetAndDraw)) throw new TypeError();\r\n    console.log(action);\r\n    dispatch(gameActions.reset({pile: action.payload.pile, p: action.payload.p, started: action.payload.started}));\r\n    if (action.payload.timeBeforeSort <= action.payload.timeBeforeDraw)\r\n    {\r\n      setTimeout(() => {\r\n        dispatch(gameActions.sortAndDraw({pile: action.payload.pile, p: action.payload.p, timeBetweenSortDraw: action.payload.timeBeforeDraw - action.payload.timeBeforeSort}));\r\n        done();\r\n      }, action.payload.timeBeforeSort);\r\n    }\r\n    else\r\n      setTimeout(() => {\r\n        dispatch(gameActions.draw({tile: action.payload.pile[action.payload.p]}));\r\n        done();\r\n      }, action.payload.timeBeforeDraw);\r\n  }\r\n});\r\nconst sortAndDrawLogic = createLogic({\r\n  type: gameActions.sortAndDraw.type,\r\n  process({ action }: { action: any }, dispatch: Dispatch, done: Done)\r\n  {\r\n    if (!isType(action, gameActions.sortAndDraw)) throw new TypeError();\r\n    dispatch(gameActions.sort());\r\n    setTimeout(() => {\r\n      dispatch(gameActions.draw({tile: action.payload.pile[action.payload.p]}));\r\n      done();\r\n    }, action.payload.timeBetweenSortDraw);\r\n  }\r\n});\r\nconst resetGamelogic = createLogic({\r\n  type: gameActions.resetGame.type,\r\n  latest: true,\r\n  process({ action }: { action: any }, dispatch: Dispatch, done: Done)\r\n  {\r\n    if (!isType(action, gameActions.resetGame)) throw new TypeError();\r\n    dispatch(gameActions.newGame({started: action.payload.started}));\r\n    dispatch(gameActions.resetAndDraw({\r\n      pile: action.payload.pile,\r\n      p: action.payload.p,\r\n      started: action.payload.started,\r\n      timeBeforeDraw: action.payload.timeBeforeDraw,\r\n      timeBeforeSort: action.payload.timeBeforeSort,\r\n    }));\r\n    setTimeout(() => {\r\n      dispatch(gameActions.finish({}));\r\n      done();\r\n    }, action.payload.timeOfGame);\r\n  }\r\n});\r\nconst declareHuLogic = createLogic({\r\n  type: gameActions.declareHu.type,\r\n  process({ action }: { action: any }, dispatch: Dispatch, done: Done)\r\n  {\r\n    if (!isType(action, gameActions.declareHu)) throw new TypeError();\r\n    let hu = action.payload.validator(fromTiles(action.payload.hand));\r\n    if (hu)\r\n      dispatch(gameActions.scoreHu({time: action.payload.time, tbd: action.payload.timeBeforeDraw}));\r\n    else\r\n      dispatch(gameActions.scoreCuohu({}));\r\n    dispatch(gameActions.appendMessage({message: `declared ${hu} hu`}));\r\n    dispatch(gameActions.resetAndDraw({\r\n      pile: action.payload.pile,\r\n      p: action.payload.p,\r\n      started: action.payload.time,\r\n      timeBeforeDraw: action.payload.timeBeforeDraw,\r\n      timeBeforeSort: action.payload.timeBeforeSort,\r\n    }));\r\n    done();\r\n  }\r\n})\r\ntype GameState = {\r\n  hand: Hand,\r\n  p: number,\r\n  pile: Pile,\r\n  score: number,\r\n  started: Date | null,\r\n  handStarted: Date | null,\r\n  messages: Array<[number, string]>,\r\n};\r\nconst nullGame: GameState = {\r\n  hand: [],\r\n  p: 0,\r\n  pile: [],\r\n  score: 0,\r\n  started: null,\r\n  handStarted: null,\r\n  messages: [],\r\n};\r\nconst gameReducer = reducerWithInitialState(nullGame)\r\n.case(gameActions.discard, (state, payload) => ({...state,\r\n  hand: discardTile(state.hand, payload.position),\r\n}))\r\n.case(gameActions.draw, (state, payload) => ({...state,\r\n  hand: drawTile(state.hand, payload.tile),\r\n  p: state.p + 1,\r\n}))\r\n.case(gameActions.reset, (state, payload) => ({...state,\r\n  hand: dealHand(payload.p, payload.pile),\r\n  p: payload.p,\r\n  pile: payload.pile,\r\n  handStarted: payload.started,\r\n}))\r\n.case(gameActions.sort, (state, payload) => ({...state,\r\n  hand: sortHand(state.hand),\r\n}))\r\n.case(gameActions.newGame, (state, payload) => ({...nullGame,\r\n  started: payload.started,\r\n  messages: appendMessage([], `new game started at ${payload.started}`),\r\n}))\r\n.case(gameActions.appendMessage, (state, payload) => ({...state,\r\n  messages: appendMessage(state.messages, payload.message)\r\n}))\r\n.case(gameActions.scoreHu, (state, payload) => ({...state,\r\n  score: state.score + Math.sqrt(payload.tbd / (payload.time.valueOf() - state.handStarted!.valueOf())),\r\n}))\r\n.case(gameActions.scoreCuohu, (state, payload) => ({...state,\r\n  score: state.score - 1,\r\n}))\r\n.case(gameActions.finish, (state, payload) => ({...state,\r\n  messages: appendMessage(state.messages, `finish! score: ${~~(state.score * 1000)}`),\r\n}))\r\n;\r\nfunction appendMessage(messages: Array<[number, string]>, newMessage: string): Array<[number, string]>\r\n{\r\n  if (messages.length === 0) return [[0, newMessage]];\r\n  const ret: Array<[number, string]> = [...messages, [messages[messages.length-1][0]+1, newMessage]];\r\n  return ret.slice(-4);\r\n}\r\nexport const gameStore = createStore(gameReducer, applyMiddleware(createLogicMiddleware([\r\n    discardAndDrawLogic,\r\n    resetAndDrawLogic,\r\n    resetGamelogic,\r\n    sortAndDrawLogic,\r\n    declareHuLogic])));\r\nfunction discardTile(hand: Hand, position: number)\r\n{\r\n  hand = [...hand];\r\n  hand.splice(position, 1);\r\n  return hand;\r\n}\r\nfunction drawTile(hand: Hand, tile: Tile)\r\n{\r\n  hand = [...hand];\r\n  hand.push(tile);\r\n  return hand;\r\n}\r\nfunction dealHand(length: number, pile: Pile)\r\n{\r\n  return pile.slice(0, length);\r\n}\r\nfunction sortHand(hand: Hand)\r\n{\r\n  hand = [...hand];\r\n  hand.sort((a, b) => (a - b));\r\n  return hand;\r\n}\r\n","import React from 'react';\nimport { connect, Provider } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Game } from './components';\nimport { gameActions, gameStore } from './gamelogics';\nimport { shufflePile } from './gamecommon';\nimport './App.css';\n\nconst ConnectedGame = connect(\n    (storeState) => (storeState),\n    (dispatch) => ({actions: bindActionCreators(gameActions, dispatch)}),\n)(Game);\n\nfunction App() {\n  return (\n    <Provider store={gameStore}>\n      <ConnectedGame initializer={shufflePile} />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}